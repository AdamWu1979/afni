##
## Include for MCW AFNI make
##   -- goes at end of each platform specific Makefile.
##

F2C = ./f2c -A

MYDOCS   = *.tex *ps *.txt art12cox.sty README*
DOCS     = *.ps README*
MINDOCS  = README*

IMOBJS  = display.o imseq.o bbox.o xim.o xutil.o LiteClue.o
AFOBJS  = afni.o afni_func.o afni_widg.o afni_warp.o afni_fimmer.o \
            afni_slice_short.o afni_slice_float.o     \
            afni_slice_byte.o  afni_slice_complex.o    \
            afni_pcor.o afni_pcor_float.o editvol.o     \
            3ddata.o pbar.o afni_graph.o afni_plugin.o   \
            parser.o parser_int.o iochan.o afni_plugout.o \
            3dmaker.o afni_setup.o                         \
            $(IMOBJS)

T3OBJS  = to3d.o 3ddata.o mcw_glob.o $(IMOBJS)

MISC    = afni.montage AFNI.Xdefaults mF64 mF128 gmovie

## Some programs (like whirlgif) are not included in this list,
## and must be "made" separately.  This list is the core AFNI
## package -- other programs are experimental and/or outsiders.

PROGRAMS = afni to3d from3d abut 3dclust nsize 3dinfo 3dproject 3dmerge count \
           sfim tfim ftosh 3dttest 3ddup imrotate imreg imstat \
           fim2 imand FD2 sqwave immask imdump imaver 3dhistog 3dfim \
           p2t 2swap 4swap mritopgm 3dANOVA 3dANOVA2 3dANOVA3 \
           waver 3dnewid 3dcalc ccalc imcalc 3T_toafni 3drefit 3dbucket \
           3dNLfim 3dTSgen AlphaSim 3dFWHM plugout_tt \
           3dMannWhitney 3dWilcoxon 3dKruskalWallis 3dFriedman 3dRegAna

PROGRAMS_NOPLUG = afni to3d from3d abut 3dclust nsize 3dinfo 3dproject 3dmerge count \
                  sfim tfim ftosh 3dttest 3ddup imrotate imreg imstat \
                  fim2 imand FD2 sqwave immask imdump imaver 3dhistog 3dfim \
                  p2t 2swap 4swap mritopgm 3dANOVA 3dANOVA2 3dANOVA3 3drefit \
                  waver 3dnewid 3dcalc ccalc imcalc \
                  3dMannWhitney 3dWilcoxon 3dKruskalWallis 3dFriedman 3dRegAna

all:libmri.a programs

itall:all plugins install install_plugins

all_noplug:libmri.a programs_noplug

programs:$(PROGRAMS)

programs_noplug:$(PROGRAMS_NOPLUG)

whirlgif:whirlgif.h whirlgif.c
	$(CC) -o whirlgif -o whirlgif whirlgif.c $(IFLAGS) $(LFLAGS) $(LLIBS)

mritopgm:mritopgm.c
	$(CC) -o mritopgm mritopgm.c $(IFLAGS) $(LFLAGS) $(LLIBS)

ppmtocmap:ppmtocmap.c
	$(CC) -o ppmtocmap ppmtocmap.c $(IFLAGS) $(LFLAGS) $(LLIBS)

impdif:impdif.c
	$(CC) -o impdif impdif.c $(IFLAGS) $(LFLAGS) $(LLIBS)

2swap:2swap.c
	$(CC) -o 2swap 2swap.c $(IFLAGS) $(LFLAGS) $(LLIBS)

4swap:4swap.c
	$(CC) -o 4swap 4swap.c $(IFLAGS) $(LFLAGS) $(LLIBS)

crao:crao.o
	$(CC) -o crao crao.o $(LFLAGS) $(LLIBS)
crao2:crao2.o
	$(CC) -o crao2 crao2.o $(LFLAGS) $(LLIBS)

imaver:imaver.o
	$(CC) -o imaver imaver.o $(LFLAGS) $(LLIBS)

impsd:impsd.o
	$(CC) -o impsd impsd.o $(LFLAGS) $(LLIBS)

imdump:imdump.o
	$(CC) -o imdump imdump.o $(LFLAGS) $(LLIBS)

imswap:imswap.o
	$(CC) -o imswap imswap.o $(LFLAGS) $(LLIBS)

immask:immask.o
	$(CC) -o immask immask.o $(LFLAGS) $(LLIBS)

sqwave:sqwave.o
	$(CC) -o sqwave sqwave.o

pcor.o:pcor.c pcor.h
	$(RM) $@
	$(CC) -c pcor.c $(IFLAGS) -DREF_FLOAT_SINGLE -UVOX_SHORT

pcorsh.o:pcor.c pcor.h
	$(RM) $@
	$(CP) pcor.c pcorsh.c
	$(CC) -c pcorsh.c $(IFLAGS) -DREF_FLOAT_SINGLE -DVOX_SHORT
	$(RM) pcorsh.c

FD2:FD2.o ts.o mcw.o overfim.o pcorsh.o mcw_glob.o
	$(RM) $@
	$(CC) -o FD2 FD2.o mcw.o overfim.o ts.o pcorsh.o mcw_glob.o $(LFLAGS) $(LLIBS)

dFD2:dFD2.o ts.o mcw.o overfim.o pcorsh.o
	$(RM) $@
	$(CC) -o dFD2 dFD2.o mcw.o overfim.o ts.o pcorsh.o $(LFLAGS) $(LLIBS)

fim:fim.c
	$(RM) $@
	$(CC) -o fim fim.c -DSYSV $(LFLAGS) $(LLIBS)

fim2:fim2.o ts.o pcor.o
	$(RM) $@
	$(CC) -o fim2 fim2.o ts.o pcor.o $(LFLAGS) $(LLIBS)

imstat:imstat.o
	$(RM) $@
	$(CC) -o imstat imstat.o $(LFLAGS) $(LLIBS)

imreg:imreg.o pcor.o
	$(RM) $@
	$(CC) -o imreg imreg.o pcor.o $(LFLAGS) $(LLIBS)

imfit:imfit.o
	$(RM) $@
	$(CC) -o imfit imfit.o $(LFLAGS) $(LLIBS)

imand:imand.o
	$(RM) $@
	$(CC) -o imand imand.o $(LFLAGS) $(LLIBS)

imrotate:imrotate.o
	$(RM) $@
	$(CC) -o imrotate imrotate.o $(LFLAGS) $(LLIBS)

dsetdup:dsetdup.o 3ddata.o
	$(RM) $@
	$(CC) -o dsetdup dsetdup.o 3ddata.o $(LFLAGS) $(LLIBS)

3ddup:3ddup.o 3ddata.o editvol.o
	$(RM) $@
	$(CC) -o 3ddup 3ddup.o 3ddata.o editvol.o $(LFLAGS) $(LLIBS)

3dproject:3dproject.o 3ddata.o editvol.o
	$(RM) $@
	$(CC) -o 3dproject 3dproject.o 3ddata.o editvol.o $(LFLAGS) $(LLIBS)

3dinfo:3dinfo.o 3ddata.o
	$(RM) $@
	$(CC) -o 3dinfo 3dinfo.o 3ddata.o $(LFLAGS) $(LLIBS)

3drefit:3drefit.o 3ddata.o editvol.o
	$(RM) $@
	$(CC) -o 3drefit 3drefit.o 3ddata.o editvol.o $(LFLAGS) $(LLIBS)

3dbucket:3dbucket.o 3ddata.o editvol.o
	$(RM) $@
	$(CC) -o 3dbucket 3dbucket.o 3ddata.o editvol.o $(LFLAGS) $(LLIBS)

from3d:from3d.o 3ddata.o
	$(RM) $@
	$(CC) -o from3d from3d.o 3ddata.o $(LFLAGS) $(LLIBS)

3dfim:3dfim.o afni_pcor_float.o 3ddata.o editvol.o ts.o
	$(RM) $@
	$(CC) -o 3dfim 3dfim.o ts.o afni_pcor_float.o 3ddata.o \
                       editvol.o $(LFLAGS) $(LLIBS)

3T_toafni:3T_toafni.o
	$(RM) $@
	$(CC) -o 3T_toafni 3T_toafni.o $(LFLAGS) $(LLIBS)

p2t:p2t.o
	$(RM) $@
	$(CC) -o p2t p2t.o $(LFLAGS) $(LLIBS)

hide:hide.o
	$(RM) $@
	$(CC) -o hide hide.o $(LFLAGS)

count:count.o
	$(RM) $@
	$(CC) -o count count.o $(LFLAGS)

nsize:nsize.o
	$(RM) $@
	$(CC) -o nsize nsize.o $(LFLAGS) $(LLIBS)

3dclust:3dclust.o editvol.o 3ddata.o
	$(RM) $@
	$(CC) -o 3dclust 3dclust.o editvol.o 3ddata.o $(LFLAGS) $(LLIBS)

3dhistog:3dhistog.o editvol.o 3ddata.o
	$(RM) $@
	$(CC) -o 3dhistog 3dhistog.o editvol.o 3ddata.o $(LFLAGS) $(LLIBS)

3dmerge:3dmerge.o editvol.o 3ddata.o
	$(RM) $@
	$(CC) -o 3dmerge 3dmerge.o editvol.o 3ddata.o $(LFLAGS) $(LLIBS)

3dcalc:3dcalc.o editvol.o 3ddata.o parser.o parser_int.o
	$(RM) $@
	$(CC) -o 3dcalc 3dcalc.o editvol.o 3ddata.o parser.o parser_int.o \
              $(LFLAGS) -lf2c $(LLIBS)

d3dmerge:3dmerge.c editvol.c 3ddata.c editvol.h
	$(RM) $@
	$(CCD) -o d3dmerge 3dmerge.c editvol.c 3ddata.c $(LFLAGS) $(LLIBS)

3dttest:3dttest.o editvol.o 3ddata.o
	$(RM) $@
	$(CC) -o 3dttest 3dttest.o editvol.o 3ddata.o $(LFLAGS) $(LLIBS)

3dpc:3dpc.o 3ddata.o editvol.o
	$(RM) $@
	$(CC) -o 3dpc 3dpc.o 3ddata.o editvol.o $(LFLAGS) $(LLAPACK) $(LLIBS)

3ddot:3ddot.o 3ddata.o editvol.o
	$(RM) $@
	$(CC) -o 3ddot 3ddot.o 3ddata.o editvol.o $(LFLAGS) $(LLIBS)

3dANOVA:3dANOVA.o editvol.o 3ddata.o
	$(RM) $@
	$(CC) -o 3dANOVA 3dANOVA.o editvol.o 3ddata.o $(LFLAGS) $(LLIBS)

3dANOVA2:3dANOVA2.o editvol.o 3ddata.o
	$(RM) $@
	$(CC) -o 3dANOVA2 3dANOVA2.o editvol.o 3ddata.o $(LFLAGS) $(LLIBS)

3dANOVA3:3dANOVA3.o editvol.o 3ddata.o
	$(RM) $@
	$(CC) -o 3dANOVA3 3dANOVA3.o editvol.o 3ddata.o $(LFLAGS) $(LLIBS)

3dNLfim:3dNLfim.o 3ddata.o editvol.o
	$(RM) $@
	$(CC) -o 3dNLfim 3dNLfim.o 3ddata.o editvol.o $(LFLAGS) $(LLIBS)

3dTSgen:3dTSgen.o 3ddata.o editvol.o
	$(RM) $@
	$(CC) -o 3dTSgen 3dTSgen.o 3ddata.o editvol.o $(LFLAGS) $(LLIBS)

AlphaSim:AlphaSim.o editvol.o 3ddata.o
	$(RM) $@
	$(CC) -o AlphaSim AlphaSim.o editvol.o 3ddata.o $(LFLAGS) $(LLIBS)

3dFWHM:3dFWHM.o editvol.o 3ddata.o
	$(RM) $@
	$(CC) -o 3dFWHM 3dFWHM.o editvol.o 3ddata.o $(LFLAGS) $(LLIBS)

3dMannWhitney:3dMannWhitney.o editvol.o 3ddata.o
	$(RM) $@
	$(CC) -o 3dMannWhitney 3dMannWhitney.o editvol.o 3ddata.o \
                        $(LFLAGS) $(LLIBS)

3dWilcoxon:3dWilcoxon.o editvol.o 3ddata.o
	$(RM) $@
	$(CC) -o 3dWilcoxon 3dWilcoxon.o editvol.o 3ddata.o \
                        $(LFLAGS) $(LLIBS)

3dKruskalWallis:3dKruskalWallis.o editvol.o 3ddata.o
	$(RM) $@
	$(CC) -o 3dKruskalWallis 3dKruskalWallis.o editvol.o 3ddata.o \
                        $(LFLAGS) $(LLIBS)

3dFriedman:3dFriedman.o editvol.o 3ddata.o
	$(RM) $@
	$(CC) -o 3dFriedman 3dFriedman.o editvol.o 3ddata.o \
                        $(LFLAGS) $(LLIBS)

3dRegAna:3dRegAna.o editvol.o 3ddata.o
	$(RM) $@
	$(CC) -o 3dRegAna 3dRegAna.o editvol.o 3ddata.o \
                        $(LFLAGS) $(LLIBS)

waver:waver.o
	$(RM) $@
	$(CC) -o waver waver.o $(LFLAGS) $(LLIBS)

3dnewid:3dnewid.o 3ddata.o
	$(RM) $@
	$(CC) -o 3dnewid 3dnewid.o 3ddata.o $(LFLAGS) $(LLIBS)

.c.o:
	$(RM) $@
	$(CC) -c $*.c $(IFLAGS)

dafni:dafni_slice_short.o dafni_slice_float.o dafni_slice_byte.o \
      dafni_slice_complex.o  dafni_pcor_float.o  LiteClue.o    \
      afni.c afni_func.c afni_widg.c afni_warp.c afni_fimmer.c \
      3ddata.c pbar.c display.c imseq.c bbox.c xim.c xutil.c afni_setup.c  \
      afni_pcor.c afni_pcor_update.c editvol.c afni_plugin.c 3dmaker.c  \
      parser.c parser_int.c iochan.c afni_plugout.c afni_plugout.c
	$(CCD) -o dafni $(IFLAGS) -DUSE_GNU_MALLOC -DMALLOC_TRACE \
                afni.c afni_func.c afni_widg.c afni_warp.c afni_graph.c \
                dafni_slice_short.o dafni_slice_float.o  LiteClue.o \
                dafni_slice_byte.o  dafni_slice_complex.o afni_fimmer.c \
                dafni_pcor_float.o editvol.c parser.c parser_int.c iochan.c \
                3ddata.c pbar.c display.c imseq.c bbox.c xim.c xutil.c afni_pcor.c \
                afni_plugin.c 3dmaker.c afni_plugout.c afni_setup.c \
                $(PLFLAGS) -lf2c $(LLIBS)
	$(RM) afni.o afni_func.o afni_widg.o afni_warp.o afni_fimmer.o afni_pcor.o \
              3ddata.o pbar.o display.o imseq.o bbox.o xim.o xutil.o \
              parser.o parser_int.o iochan.o afni_plugout.o afni_setup.o \
              dafni_pcor_float.o editvol.o afni_graph.o afni_plugin.o 3dmaker.o \
              dafni_slice_short.o dafni_slice_float.o dafni_slice_byte.o \
              dafni_slice_complex.o

dto3d:to3d.c 3ddata.c display.c imseq.c bbox.c xim.c xutil.c mcw_glob.c
	$(CCD) -o dto3d $(IFLAGS) \
               to3d.c 3ddata.c display.c imseq.c bbox.c xim.c xutil.c mcw_glob.c \
               $(LFLAGS) $(LLIBS)
	$(RM) to3d.o 3ddata.o display.o imseq.o bbox.o xim.o xutil.o mcw_glob.o

### Special compilations for the reslicing routines, which
### are templates that require definition of the data type
### upon which they operate.

afni_slice_short.o:3ddata.h afni_slice.c afni_warp.h
	$(RM) $@
	$(CC) -c -DDTYPE=short afni_slice.c $(IFLAGS)
	$(MV) afni_slice.o afni_slice_short.o

afni_slice_float.o:3ddata.h afni_slice.c afni_warp.h
	$(RM) $@
	$(CC) -c -DDTYPE=float afni_slice.c $(IFLAGS)
	$(MV) afni_slice.o afni_slice_float.o

afni_slice_byte.o:3ddata.h afni_slice.c afni_warp.h
	$(RM) $@
	$(CC) -c -DDTYPE=byte afni_slice.c $(IFLAGS)
	$(MV) afni_slice.o afni_slice_byte.o

afni_slice_int.o:3ddata.h afni_slice.c afni_warp.h
	$(RM) $@
	$(CC) -c -DDTYPE=int afni_slice.c $(IFLAGS)
	$(MV) afni_slice.o afni_slice_int.o

afni_slice_complex.o:3ddata.h afni_slice.c afni_warp.h
	$(RM) $@
	$(CC) -c -DDTYPE=complex afni_slice.c $(IFLAGS)
	$(MV) afni_slice.o afni_slice_complex.o

afni_pcor_byte.o:afni_pcor.h afni_pcor_update.c
	$(RM) $@
	$(CC) -c -DDTYPE=byte afni_pcor_update.c $(IFLAGS)
	$(MV) afni_pcor_update.o afni_pcor_byte.o

afni_pcor_float.o:afni_pcor.h afni_pcor_update.c
	$(RM) $@
	$(CC) -c -DDTYPE=float afni_pcor_update.c $(IFLAGS)
	$(MV) afni_pcor_update.o afni_pcor_float.o

afni_pcor_short.o:afni_pcor.h afni_pcor_update.c
	$(RM) $@
	$(CC) -c -DDTYPE=short afni_pcor_update.c $(IFLAGS)
	$(MV) afni_pcor_update.o afni_pcor_short.o

# Debugging versions of the above

dafni_slice_short.o:3ddata.h afni_slice.c afni_warp.h
	$(RM) $@
	$(CCD) -c -DDTYPE=short afni_slice.c $(IFLAGS) -DUSE_GNU_MALLOC -DMALLOC_TRACE
	$(MV) afni_slice.o dafni_slice_short.o

dafni_slice_float.o:3ddata.h afni_slice.c afni_warp.h
	$(RM) $@
	$(CCD) -c -DDTYPE=float afni_slice.c $(IFLAGS) -DUSE_GNU_MALLOC -DMALLOC_TRACE
	$(MV) afni_slice.o dafni_slice_float.o

dafni_slice_byte.o:3ddata.h afni_slice.c afni_warp.h
	$(RM) $@
	$(CCD) -c -DDTYPE=byte afni_slice.c $(IFLAGS) -DUSE_GNU_MALLOC -DMALLOC_TRACE
	$(MV) afni_slice.o dafni_slice_byte.o

dafni_slice_int.o:3ddata.h afni_slice.c afni_warp.h
	$(RM) $@
	$(CCD) -c -DDTYPE=int afni_slice.c $(IFLAGS) -DUSE_GNU_MALLOC -DMALLOC_TRACE
	$(MV) afni_slice.o dafni_slice_int.o

dafni_slice_complex.o:3ddata.h afni_slice.c afni_warp.h
	$(RM) $@
	$(CCD) -c -DDTYPE=complex afni_slice.c $(IFLAGS) -DUSE_GNU_MALLOC -DMALLOC_TRACE
	$(MV) afni_slice.o dafni_slice_complex.o

dafni_pcor_byte.o:afni_pcor.h afni_pcor_update.c
	$(RM) $@
	$(CCD) -c -DDTYPE=byte afni_pcor_update.c $(IFLAGS) -DUSE_GNU_MALLOC -DMALLOC_TRACE
	$(MV) afni_pcor_update.o dafni_pcor_byte.o

dafni_pcor_float.o:afni_pcor.h afni_pcor_update.c
	$(RM) $@
	$(CCD) -c -DDTYPE=float afni_pcor_update.c $(IFLAGS) -DUSE_GNU_MALLOC -DMALLOC_TRACE
	$(MV) afni_pcor_update.o dafni_pcor_float.o

dafni_pcor_short.o:afni_pcor.h afni_pcor_update.c
	$(RM) $@
	$(CCD) -c -DDTYPE=short afni_pcor_update.c $(IFLAGS) -DUSE_GNU_MALLOC -DMALLOC_TRACE
	$(MV) afni_pcor_update.o dafni_pcor_short.o

### End of reslicing routines

afni:$(AFOBJS)
	$(RM) $@
	$(CC) -o afni $(AFOBJS) $(PLFLAGS) -lf2c $(LLIBS)

to3d:to3d.h $(T3OBJS)
	$(RM) $@
	$(CC) -o to3d $(T3OBJS) $(LFLAGS) $(LLIBS)

abut:abut.o
	$(RM) $@
	$(CC) -o abut abut.o $(LFLAGS) $(LLIBS)

sfim:sfim.o
	$(RM) $@
	$(CC) -o sfim sfim.o $(LFLAGS) $(LLIBS)

tfim:tfim.o
	$(RM) $@
	$(CC) -o tfim tfim.o $(LFLAGS) $(LLIBS)

ftosh:ftosh.o
	$(RM) $@
	$(CC) -o ftosh ftosh.o $(LFLAGS) $(LLIBS)

ppmtoargb:ppmtoargb.o
	$(RM) $@
	$(CC) -o ppmtoargb ppmtoargb.o $(LFLAGS) $(LLIBS)

colari:colari.o
	$(RM) $@
	$(CC) -o colari colari.o $(LFLAGS) $(LLIBS)

iotest:iotest.o iochan.o
	$(RM) $@
	$(CC) -o iotest iotest.o iochan.o $(LFLAGS) $(LLIBS)

clean:
	$(RM) *.o

cleaner:
	$(RM) $(PROGRAMS)

backup:
	rsh manwe chmod -R u+w /usr2/cox/AFNI96
	rcp -prv * manwe:/usr2/cox/AFNI96

backtape:
	$(TAR) cvf $(TAPE) ../AFNI96/

afni96.tgz:
	$(RM) $@
	$(MKDIR) AFNI96
	$(CP) *.c *.f *.inc *.h Makefile.* *.xbm $(MINDOCS) $(MISC) ./AFNI96
	$(CP) -r f2cdir ./AFNI96
	$(TAR) cf - AFNI96 | $(GZIP) -9v > afni96.tgz
	$(RM) -r AFNI96

src.tgz:
	$(RM) $@
	$(MKDIR) ./SRC
	$(CP) *.c *.f *.inc *.h Makefile.* *.xbm moveup README* AFNI.* \
              dist* ./SRC
	$(TAR) cf - ./SRC | $(GZIP) -9v > src.tgz
	$(RM) -r ./SRC

epv.tgz:
	$(TAR) cf - ./epv | $(GZIP) -9v > src.tgz

mydoc.tgz:
	$(RM) $@
	$(MKDIR) ./MYDOC
	$(CP) $(MYDOCS) ./MYDOC
	$(TAR) cf - ./MYDOC | $(GZIP) -9v > mydoc.tgz
	$(RM) -r ./MYDOC

doc.tgz:
	$(RM) $@
	$(MKDIR) ./DOC
	$(CP) $(DOCS) ./DOC
	$(TAR) cf - ./DOC | $(GZIP) -9v > doc.tgz
	$(RM) -r ./DOC

install:
	$(MV) $(PROGRAMS) $(INSTALLDIR)

install_noplug:
	$(MV) $(PROGRAMS_NOPLUG) $(INSTALLDIR)

install_lib:
	$(CP) libmri.a mrilib.h cdflib.h libf2c.a f2c.h $(LIBDIR)
###################################################################
# some dependencies (not complete)

3ddata.o:killer.h vecmat.h machdep.h 3ddata.h

afni.o:imseq.h 3ddata.h xutil.h pbar.h afni.h bbox.h afni_warp.h \
       afni_graph.h afni_setup.h machdep.h

afni_func.o:imseq.h 3ddata.h xutil.h pbar.h afni.h machdep.h
afni_widg.o:imseq.h 3ddata.h xutil.h pbar.h afni.h mcw.h machdep.h
afni_warp.o:afni_warp.h 3ddata.h machdep.h
afni_graph.o:afni_graph.h 3ddata.h xutil.h bbox.h afni.h machdep.h
afni_fimmer.o:afni_graph.h afni.h machdep.h
afni_plugin.o:afni_plugin.h 3ddata.h xutil.h afni.h bbox.h afni_warp.h \
              machdep.h 3dmaker.h display.h
afni_plugout.o:afni_plugin.h afni_plugout.h machdep.h
afni_setup.o:afni.h afni_setup.h pbar.h

3dmaker.o:3dmaker.h 3ddata.h editvol.h

editvol.o:editvol.h 3ddata.h
3dclust.o:editvol.h 3ddata.h
3dmerge.o:editvol.h 3ddata.h
pbar.o:pbar.h machdep.h
bbox.o:bbox.h xutil.h
xutil.o:xutil.h
imseq.o:imseq.h display.h bbox.h xutil.h mrilib.h
display.o:display.h mrilib.h
xim.o:xim.h display.h mrilib.h

ts.o:ts.h
to3d.o:to3d.h
iochan.o:iochan.h

3dbucket.o:3ddata.h editvol.h

afni_plugout.o:afni_plugout.h iochan.h afni_plugin.h

###################################################################
# make the mri library

MRI_OBJS = mri_cfft.o mri_complex_arith.o mri_fft_complex.o mri_free.o \
           mri_max.o mri_new.o mri_read.o mri_swapbytes.o \
           mri_to_byte.o mri_to_complex.o mri_to_float.o mri_to_short.o \
           mri_warp.o mri_write.o mri_float_func.o mri_edit.o mri_stat_seq.o \
           mri_add_name.o mri_histog.o mri_nsize.o mri_lsqfit.o mri_sobel.o \
           csfft.o mri_filt_fft.o mri_align.o mri_rota.o mri_thresh.o \
           mri_to_mri.o mri_flippo.o mri_percents.o mri_stats.o mri_cat2D.o \
           mri_transpose.o mri_shifter.o

CDF_OBJS = cdf_00.o cdf_01.o cdf_02.o cdf_03.o cdf_04.o cdf_05.o \
           cdf_06.o cdf_07.o cdf_08.o cdf_09.o cdf_10.o cdf_11.o \
           cdf_12.o cdf_13.o cdf_14.o cdf_15.o cdf_16.o cdf_17.o \
           cdf_18.o cdf_19.o cdf_20.o cdf_21.o cdf_22.o cdf_23.o \
           cdf_24.o cdf_25.o cdf_26.o cdf_27.o cdf_28.o cdf_29.o \
           cdf_30.o cdf_31.o cdf_32.o cdf_33.o cdf_34.o cdf_35.o \
           cdf_36.o cdf_37.o cdf_38.o cdf_39.o cdf_40.o cdf_41.o \
           cdf_42.o cdf_43.o cdf_44.o cdf_45.o cdf_46.o cdf_47.o \
           cdf_48.o cdf_49.o cdf_50.o cdf_51.o cdf_52.o cdf_53.o \
           cdf_54.o cdf_55.o cdf_56.o cdf_57.o cdf_58.o cdf_59.o \
           cdf_60.o cdf_61.o cdf_62.o cdf_63.o cdf_64.o cdf_65.o \
           cdf_66.o cdf_67.o cdf_68.o cdf_69.o cdf_70.o cdf_71.o \
           cdf_72.o cdf_73.o cdf_74.o cdf_75.o cdf_76.o cdf_77.o \
           cdf_78.o cdf_79.o cdf_80.o

libmri.a:mrilib.h $(MRI_OBJS) $(CDF_OBJS)
	$(RM) $@
	$(AR) q libmri.a $(MRI_OBJS) $(CDF_OBJS)
	$(RANLIB) libmri.a

###################################################################
# Plugin stuff

.SUFFIXES:.$(PLUGIN_SUFFIX)

SO = $(PLUGIN_SUFFIX)

plugins:plug_clust.$(SO)   plug_copy.$(SO)     plug_rename.$(SO) \
        plug_3ddot.$(SO)   plug_power.$(SO)    plug_stats.$(SO)  \
        plug_lsqfit.$(SO)  plug_imreg.$(SO)    plug_edit.$(SO)   \
        plug_nlfit.$(SO)   plug_realtime.$(SO)                   \
        plug_coorder.$(SO) plug_3Ddump.$(SO)                     \
        models 3ddata.h

models: model_constant.$(SO) model_linear.$(SO) model_quadratic.$(SO) \
        model_null.$(SO) \
        model_sinewave_ap.$(SO) model_sinewave_apf.$(SO) \
        model_squarewave_ap.$(SO) model_squarewave_apf.$(SO) \
        model_trnglwave_ap.$(SO) model_trnglwave_apf.$(SO) \
        model_diffexp.$(SO) model_gammavar.$(SO)

install_plugins:
	$(MV) *.$(PLUGIN_SUFFIX) $(INSTALLDIR)
	echo Plugins put in directory $(INSTALLDIR):
	echo Do not forget to setenv AFNI_PLUGINPATH appropriately

.c.$(SO):afni_plugin.h afni.h 3ddata.h
	$(RM) $@
	$(PLUGIN_CC) -c $*.c $(IFLAGS)
	$(LD) $(PLUGIN_LFLAGS) -o $*.$(SO) $*.o

libmri.$(SO):mrilib.h $(MRI_OBJS)
	$(RM) $@
	$(LD) $(PLUGIN_LFLAGS) -o libmri.$(SO) $(MRI_OBJS)

libcdf.$(SO):cdflib.h $(CDF_OBJS)
	$(RM) $@
	$(LD) $(PLUGIN_LFLAGS) -o libcdf.$(SO) $(CDF_OBJS)

plug_realtime.$(SO):plug_realtime.c iochan.h
	$(RM) $@
	$(PLUGIN_CC) -c plug_realtime.c $(IFLAGS)
	$(LD) $(PLUGIN_LFLAGS) -o plug_realtime.$(SO) plug_realtime.o

epsim:epsim.o iochan.o 3ddata.o
	$(RM) $@
	$(CC) -o epsim epsim.o iochan.o 3ddata.o $(LFLAGS) $(LLIBS)

plugout_tt:plugout_tt.o iochan.o
	$(RM) $@
	$(CC) -o plugout_tt plugout_tt.o iochan.o $(LFLAGS) $(LLIBS)

######################################################################
# Stuff that was originally in Fortran

f2c:
	( cd f2cdir ; \
	  make f2c clean 'RM=$(RM)' 'CC=$(CC)' 'AR=$(AR)' 'CCMIN=$(CCMIN)' \
	        'RANLIB=$(RANLIB)' 'LDFLAGS=$(LDFLAGS)' 'IFLAGS=$(IFLAGS)' ; \
	  $(MV) f2c .. ; )

libf2c.a:
	( cd f2cdir ; \
	  make libf2c.a clean 'RM=$(RM)' 'CC=$(CC)' 'AR=$(AR)' \
	        'RANLIB=$(RANLIB)' 'LDFLAGS=$(LDFLAGS)' 'IFLAGS=$(IFLAGS)' ; \
	  $(MV) libf2c.a .. ; )

f2c.h:
	$(CP) f2cdir/f2c.h ./

f2c.tgz:
	$(TAR) cf - ./f2cdir | $(GZIP) -9v > f2c.tgz

## The following only needs to be used if parser.f
## is edited, since AFNI96 ships with parser.c already made.

parser.c:
	$(F2C) parser.f

parser.o:parser.c f2c.h libf2c.a

ccalc:parser.o parser_int.o ccalc.o
	$(RM) $@
	$(CC) -o ccalc ccalc.o parser.o parser_int.o $(LFLAGS) -lf2c $(LLIBS)

libclam.a:
	( cd clamdir ; \
	  make cfiles libclam.a clean 'RM=$(RM)' 'CC=$(CC)' 'AR=$(AR)' \
	        'RANLIB=$(RANLIB)' 'IFLAGS=-I../' 'F2C=../f2c -AP' ; \
	  $(MV) libclam.a clamlib.h .. ; )

colfit.c:
	$(F2C) colfit.f

colcalc.c:
	$(F2C) colcalc.f

colfit:parser.o colfit.o
	$(CC) -o colfit colfit.o parser.o $(LFLAGS) -lclam -lf2c $(LLIBS)

colcalc:parser.o colcalc.o
	$(CC) -o colcalc colcalc.o parser.o $(LFLAGS) -lclam -lf2c $(LLIBS)

imcalc:imcalc.o parser.o parser_int.o
	$(CC) -o imcalc imcalc.o parser.o parser_int.o $(LFLAGS) -lf2c $(LLIBS)
